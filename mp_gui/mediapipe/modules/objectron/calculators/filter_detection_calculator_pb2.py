# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mediapipe/modules/objectron/calculators/filter_detection_calculator.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from mediapipe.framework import calculator_pb2 as mediapipe_dot_framework_dot_calculator__pb2
mediapipe_dot_framework_dot_calculator__options__pb2 = mediapipe_dot_framework_dot_calculator__pb2.mediapipe_dot_framework_dot_calculator__options__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='mediapipe/modules/objectron/calculators/filter_detection_calculator.proto',
  package='mediapipe',
  syntax='proto2',
  serialized_pb=_b('\nImediapipe/modules/objectron/calculators/filter_detection_calculator.proto\x12\tmediapipe\x1a$mediapipe/framework/calculator.proto\"\xcb\x02\n FilterDetectionCalculatorOptions\x12\x11\n\tmin_score\x18\x01 \x01(\x02\x12\x11\n\tmax_score\x18\x02 \x01(\x02\x12#\n\x14\x66\x61il_on_empty_labels\x18\x03 \x01(\x08:\x05\x66\x61lse\x12:\n+empty_allowed_labels_means_allow_everything\x18\x06 \x01(\x08:\x05\x66\x61lse\x12 \n\x14use_detection_vector\x18\x04 \x01(\x08\x42\x02\x18\x01\x12\"\n\x16use_allowed_labels_csv\x18\x05 \x01(\x08\x42\x02\x18\x01\x32Z\n\x03\x65xt\x12\x1c.mediapipe.CalculatorOptions\x18\x8b\xc0\xf6\xa1\x01 \x01(\x0b\x32+.mediapipe.FilterDetectionCalculatorOptions')
  ,
  dependencies=[mediapipe_dot_framework_dot_calculator__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_FILTERDETECTIONCALCULATOROPTIONS = _descriptor.Descriptor(
  name='FilterDetectionCalculatorOptions',
  full_name='mediapipe.FilterDetectionCalculatorOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min_score', full_name='mediapipe.FilterDetectionCalculatorOptions.min_score', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_score', full_name='mediapipe.FilterDetectionCalculatorOptions.max_score', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fail_on_empty_labels', full_name='mediapipe.FilterDetectionCalculatorOptions.fail_on_empty_labels', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='empty_allowed_labels_means_allow_everything', full_name='mediapipe.FilterDetectionCalculatorOptions.empty_allowed_labels_means_allow_everything', index=3,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='use_detection_vector', full_name='mediapipe.FilterDetectionCalculatorOptions.use_detection_vector', index=4,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))),
    _descriptor.FieldDescriptor(
      name='use_allowed_labels_csv', full_name='mediapipe.FilterDetectionCalculatorOptions.use_allowed_labels_csv', index=5,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))),
  ],
  extensions=[
    _descriptor.FieldDescriptor(
      name='ext', full_name='mediapipe.FilterDetectionCalculatorOptions.ext', index=0,
      number=339582987, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=True, extension_scope=None,
      options=None),
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=127,
  serialized_end=458,
)

DESCRIPTOR.message_types_by_name['FilterDetectionCalculatorOptions'] = _FILTERDETECTIONCALCULATOROPTIONS

FilterDetectionCalculatorOptions = _reflection.GeneratedProtocolMessageType('FilterDetectionCalculatorOptions', (_message.Message,), dict(
  DESCRIPTOR = _FILTERDETECTIONCALCULATOROPTIONS,
  __module__ = 'mediapipe.modules.objectron.calculators.filter_detection_calculator_pb2'
  # @@protoc_insertion_point(class_scope:mediapipe.FilterDetectionCalculatorOptions)
  ))
_sym_db.RegisterMessage(FilterDetectionCalculatorOptions)

_FILTERDETECTIONCALCULATOROPTIONS.extensions_by_name['ext'].message_type = _FILTERDETECTIONCALCULATOROPTIONS
mediapipe_dot_framework_dot_calculator__options__pb2.CalculatorOptions.RegisterExtension(_FILTERDETECTIONCALCULATOROPTIONS.extensions_by_name['ext'])

_FILTERDETECTIONCALCULATOROPTIONS.fields_by_name['use_detection_vector'].has_options = True
_FILTERDETECTIONCALCULATOROPTIONS.fields_by_name['use_detection_vector']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))
_FILTERDETECTIONCALCULATOROPTIONS.fields_by_name['use_allowed_labels_csv'].has_options = True
_FILTERDETECTIONCALCULATOROPTIONS.fields_by_name['use_allowed_labels_csv']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))
# @@protoc_insertion_point(module_scope)
